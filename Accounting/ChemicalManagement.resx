<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>